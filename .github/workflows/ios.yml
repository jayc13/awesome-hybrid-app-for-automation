name: iOS Build ## name of the workflow

on:
  workflow_dispatch: # To trigger manual build
  release:
    types: [published] # only run the workflow when a new release has been published
  pull_request:
    branches:
    - main
  push:
    branches:
    #- main
    - release/*


jobs:
  ios-build:
    name: IOS Build
    runs-on: macOS-latest
    defaults:
      run:
        working-directory: ios

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Restore node_modules from cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Setup Ruby (bundle)
        uses: ruby/setup-ruby@v1
        working-directory: ./
        with:
          ruby-version: 3.2.0
          bundler-cache: true

      - name: Install dependencies
        working-directory: ./
        run: yarn install --frozen-lockfile --network-timeout 300000

      - name: Restore Pods cache
        uses: actions/cache@v2
        working-directory: ./
        with:
          path: |
            ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install Pods
        working-directory: ./ios
        run: pod install --repo-update

      - name: Build App
        working-directory: ./
        run: npm run build-ios
